#Create mvn project
mvn archetype:create -DgroupId=org.xudifsd -DartifactId=simple -DpackageName=org.xudifsd

#Execute under mvn
mvn exec:java -Dexec.mainClass=org.xudifsd.Test

#Create web project
mvn archetype:create -DgroupId=org.xudifsd -DartifactId=java-web -DpackageName=org.xudifsd -DarchetypeArtifactId=maven-archetype-webapp
difference between 1st one is -DarchetypeArtifactId paramenter

#Using Jetty Plugin
<project>
    [...]
    <build>
        <finalName>simple-webapp</finalName>
        <plugins>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    [...]
</project>
and run $ mvn jetty:run

#Adding a Test-scoped Dependency
<project>
    ...
    <dependencies>
        ...
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>
            <scope>test</scope>
        </dependency>
        ...
    </dependencies>
</project>

#build jar with dependencies
<project>
    [...]
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <mainClass>wordCount.Main</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>assembly</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
Once you've added this configuration, you can build the assembly by running mvn
assembly:assembly.
$ mvn install assembly:assembly

#build mvn with java 1.6 support(this is a shit config)
<build>
    [...]
    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.1</version>
            <configuration>
                <source>1.6</source>
                <target>1.6</target>
            </configuration>
        </plugin>
    </plugins>
    [...]
</build>

#skip test
mvn install -Dmaven.test.skip=true

#install local jar
mvn install:install-file -DgroupId=org.apache.maven.surefire -DartifactId=surefire-junit3 -Dversion=2.12.4 -Dpackaging=jar -Dfile=/Users/xudifsd/Downloads/surefire-junit3-2.12.4.jar

#push to clojars
scp pom.xml myjar-1.0.jar clojars@clojars.org:
